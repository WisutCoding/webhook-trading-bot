strategy("RSI Crossing Signal Line", overlay=true,default_qty_type=strategy.cash,default_qty_value=100,currency=currency.USD,initial_capital=1000)

//Time Range___________________________________________________________________________________________________________

startDate = input.int(title="Start Date",defval=1, minval=1, maxval=31)
startMonth = input.int(title="Start Month",defval=1, minval=1, maxval=12)
startYear = input.int(title="Start Year",defval=2022, minval=1800, maxval=2100)

endDate = input.int(title="End Date",defval=31, minval=1, maxval=31)
endMonth = input.int(title="End Month",defval=12, minval=1, maxval=12)
endYear = input.int(title="End Year",defval=2025, minval=1800, maxval=2100)
     
inDateRange = (time >= timestamp(syminfo.timezone, startYear,
         startMonth, startDate, 0, 0)) and
     (time < timestamp(syminfo.timezone, endYear, endMonth, endDate, 0, 0))

//RSI__________________________________________________________________________________________________________________

bar_type = input.source(title="bar_type", defval=close, group="RSI Settings")
rsi_length = input.int(title="rsi_length", defval=14, minval=1, maxval=1000, group="RSI Settings")

rsi = rsi(bar_type,rsi_length)
rsi_Shifted_1 = rsi(bar_type,rsi_length)[1]

//RSI Signal Line______________________________________________________________________________________________________

ma(source, length, type) =>
    switch type
        "SMA" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)

maLengthInput = input.int(14, title="RSI Signal Length", group="Signal Line Settings")
maTypeInput = input.string("SMA", title="RSI Signal Type", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="Signal Line Settings")

rsi_signal = ma(rsi, maLengthInput, maTypeInput)
rsi_signal_Shifted_1 = ma(rsi, maLengthInput, maTypeInput)[1]

//Strategy Signal________________________________________________________________________________________________________

RSI_Entry_Long  = (rsi > rsi_signal)
RSI_Entry_Long_Shifted_1 = (rsi_Shifted_1 <= rsi_signal_Shifted_1)

RSI_Close_Long = (rsi < rsi_signal)
RSI_Close_Long_Shifted_1 = (rsi_Shifted_1 >= rsi_signal_Shifted_1)

// Set trade entry conditions____________________________________________________________________________________________
//1.1 RSI (Long)
if (inDateRange and RSI_Entry_Long and RSI_Entry_Long_Shifted_1)
    strategy.entry(id="Long RSI Crossing Signal", long=true)
if (inDateRange and RSI_Close_Long and RSI_Close_Long_Shifted_1)
    strategy.close(id="Long RSICrossing Signal")
    
//Bar Color__________________________________________________________________________________________________________________

color_up = input.color(title="RSI Crossing Up", defval=green, group="Bar Settings")
color_down = input.color(title="RSI Crossing Down", defval=purple, group="Bar Settings")

barcolor(RSI_Entry_Long and RSI_Entry_Long_Shifted_1 ? color.green : na)
barcolor(RSI_Close_Long and RSI_Close_Long_Shifted_1 ? color.maroon : na)

//Plot RSI__________________________________________________________________________________________________________________
plot(rsi, "RSI", color=#7E57C2)
plot(rsiMA, "RSI-based MA", color=color.yellow)




